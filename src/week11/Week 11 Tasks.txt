Office Hours Topics:

    reviewing week 10:
    static
    access modifier
    encapsulation
    inheritance intro

----------------------------------------------------------------------------------------

Country [static, instance, class, object]

    Create a class Country
    define these static variables:
        planet - Earth
        world population - 7.88 billion - represent as a double 7.88 -
        world co2 level - 417.83 - represent as a double - the unit is ppm (parts per million)

    define these instance variables:
         name, population, continent

    create a static block to initialize the static variables

    create a constructor to initialize the instance variables

    create a different class to test the Country objects and static variables

----------------------------------------------------------------------------------------

House [access modifiers, packages]

    Create a package virginia
    Create a class House
    define these instance variables with specific access modifiers:
        public - address
        protected - price
        default - neighborhood name
        private - owner name

    Create a class in the same package - virginia and test which access modifiers are accessible from the objects

    Create a different package california
    Create a class in the different package california and test which access modifiers are accessible from the objects

----------------------------------------------------------------------------------------

Workout [Encapsulation, access modifiers, classes, objects, methods]

    Create a class Workout
    define and encapsulate these instance variables:
        name, duration, calories burned

    create a constructor to initialize the variables. Call the setters in the constructor

    in the setters only set the values if they are valid data based on these requirements:
        name: should have only letters and spaces, no other characters type. The name cannot be empty either

        duration: should be more than 0

        calories burned: should be more than 0 and less than 1000

    create another class to test the Workout objects

----------------------------------------------------------------------------------------

FoodCourse [Inheritance, classes, objects]

    Create a class FoodCourse
    define these instance variables:
        name, price

    Create a class Entree
    inherit the FoodCourse class
    add an instance variable

    Create a class Taco
    inherits the Entree class

    Create a class Fish
    inherits the Entree class
    create an additional instance variable: fish type

    Create a class Restaurant class to test all of the objects
        check the variables that are accessed from each object

-> For more practice continue to add more courses and specific meals classes
    entrees: gyro, steak, pasta
    appetizers (sub of FoodCourse): breadstick, cheese stick, shrimp
    deserts (sub of FoodCourse): ice cream, cookies, cake

----------------------------------------------------------------------------------------