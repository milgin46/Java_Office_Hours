Office Hours Topics:

    reviewing week 7:
    Memory Management
    Array
    For Each
    Arrays class

----------------------------------------------------------------------------------------

Analysis the code to determine which parts are in the stack & heap memory

    public class Test {

        int z;

        public static void Add(int a, int b){
            System.out.println(a + b);
        }

        public static void main(String [] args) {
            Add(5, 3);

            Test obj = new Test();
            obj.z = 10;

        }

    }

----------------------------------------------------------------------------------------

T1ShiftLeft [array, loop]

    Create a program that will define an int array with any number of elements. Print out the array with all the elements shifted one position to the left. The first element would be moved to the end

    Ex:
        {1, 2, 3} -> [2, 3, 1]
        {17, 14, 5, 10} -> [14, 5, 10, 17]
        {7, 0, 1} -> [0, 1, 7]

----------------------------------------------------------------------------------------

T2BeginningEnd [array, loop, String]

    Create a program that will define a String array with some name values. Determine how many of the names begin with and end with the same character.

    Ex:
        {Anna, Mike, Aliya, Remus, Gina, Hannah, Nathan, Otto, Kevin, Kelly}

        -> 5

    Bonus challenge: Collect all the names that start and end with the same character into an array

----------------------------------------------------------------------------------------

T3ReverseEach [array, loop, String]

    Create a program that will define a String array with some words. Reverse each given element and assign them to a new array for all the reverse words

    Ex:
        {can, you, join, the, team} -> [nac, uoy, nioj, eht, meat]

    Note: We will use reverse logic in the next task too, so make a reusable method that can help with that part

----------------------------------------------------------------------------------------

T4LongestPalindrome [array, loop, String]

    Create a program that will define a String array of words. Find the longest palindrome String from that array. If no palindrome is found print: No Palindrome Found

    Ex:
        {java, long word, civic, apple, racecar, mom, anna, really long word}
        longest palindrome is: racecar

        {abc, hello, world, java}
        No Palindrome Found

----------------------------------------------------------------------------------------


